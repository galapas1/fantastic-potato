import React from 'react';
import { each, isUndefined } from 'underscore';
import { minimumValueString, maximumValueString, maximumBSTThicknessValueString } from 'Validation/validationHelper';
import {
  SURFACE_POISSONS_RATIO,
  SURFACE_LAYER_MODULUS_ELASTICITY,
  SURFACE_LAYER_THICKNESS,
  ALLOWABLE_DAMAGE_PER_LAYER,
  HDG,
  US,
  METRIC
} from  'Constants';

const        HDG_MAXIMUM_SURFACE_LAYER_MODULUS_ELASTICITY = 4000000;
const METRIC_HDG_MAXIMUM_SURFACE_LAYER_MODULUS_ELASTICITY = 27579;

const        DISPLAY_HDG_MAXIMUM_SURFACE_LAYER_MODULUS_ELASTICITY = '4,000,000';
const METRIC_DISPLAY_HDG_MAXIMUM_SURFACE_LAYER_MODULUS_ELASTICITY = '27,579';

const        HDG_MINIMUM_SURFACE_LAYER_MODULUS_ELASTICITY = 20000;
const METRIC_HDG_MINIMUM_SURFACE_LAYER_MODULUS_ELASTICITY = 137.9;

const        DISPLAY_HDG_MINIMUM_SURFACE_LAYER_MODULUS_ELASTICITY = '20,000';
const METRIC_DISPLAY_HDG_MINIMUM_SURFACE_LAYER_MODULUS_ELASTICITY = '137.9';

const        HDG_HIGH_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY= 2000000;
const METRIC_HDG_HIGH_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY= 13789.5;

const        DISPLAY_HDG_HIGH_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY= '2,000,000';
const METRIC_DISPLAY_HDG_HIGH_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY= '13,789.5';

const        HDG_LOW_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY= 50000;
const METRIC_HDG_LOW_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY= 344.7;

const        DISPLAY_HDG_LOW_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY= '50,000';
const METRIC_DISPLAY_HDG_LOW_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY= '344.7';

const        BST_AND_OTHER_MAXIMUM_SURFACE_LAYER_MODULUS_ELASTICITY = 2000000;
const METRIC_BST_AND_OTHER_MAXIMUM_SURFACE_LAYER_MODULUS_ELASTICITY = 13789.5;

const        DISPLAY_BST_AND_OTHER_MAXIMUM_SURFACE_LAYER_MODULUS_ELASTICITY = '2,000,000';
const METRIC_DISPLAY_BST_AND_OTHER_MAXIMUM_SURFACE_LAYER_MODULUS_ELASTICITY = '13,789.5';

const        BST_AND_OTHER_MINIMUM_SURFACE_LAYER_MODULUS_ELASTICITY = 50000;
const METRIC_BST_AND_OTHER_MINIMUM_SURFACE_LAYER_MODULUS_ELASTICITY = 344.7;

const        DISPLAY_BST_AND_OTHER_MINIMUM_SURFACE_LAYER_MODULUS_ELASTICITY = '50,000';
const METRIC_DISPLAY_BST_AND_OTHER_MINIMUM_SURFACE_LAYER_MODULUS_ELASTICITY = '344.7';

const        BST_AND_OTHER_HIGH_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY= 1000000;
const METRIC_BST_AND_OTHER_HIGH_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY= 6894.8;

const        DISPLAY_BST_AND_OTHER_HIGH_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY= '1,000,000';
const METRIC_DISPLAY_BST_AND_OTHER_HIGH_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY= '6,894.8';

const        BST_AND_OTHER_LOW_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY= 100000;
const METRIC_BST_AND_OTHER_LOW_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY= 689.5;

const        DISPLAY_BST_AND_OTHER_LOW_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY= '100,000';
const METRIC_DISPLAY_BST_AND_OTHER_LOW_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY= '689.5';

const        MAXIMUM_SURFACE_POISSONS_RATIO = 0.50;
const METRIC_MAXIMUM_SURFACE_POISSONS_RATIO = 0.50;

const        MINIMUM_SURFACE_POISSONS_RATIO = 0.10;
const METRIC_MINIMUM_SURFACE_POISSONS_RATIO = 0.10;

const        MAXIMUM_BST_AND_OTHER_SURFACE_THICKNESS = 0.50;
const        MINIMUM_BST_AND_OTHER_SURFACE_THICKNESS = 0.10;

const        MAXIMUM_HDG_SURFACE_THICKNESS = 30;
const        MINIMUM_HDG_SURFACE_THICKNESS = 1.50;

export const validate = (values, props) => {
  const errors = {};
  const enterValueString = 'Please enter a value';
  const { pavementStructureType, unitType } = props
  const inputs = [SURFACE_POISSONS_RATIO, SURFACE_LAYER_MODULUS_ELASTICITY, SURFACE_LAYER_THICKNESS, ALLOWABLE_DAMAGE_PER_LAYER];

  each(inputs, function(input) {
    if (isUndefined(values[input])) {
      errors[input] = enterValueString;
    }
  })

  if (unitType === US) {
    if (values[SURFACE_POISSONS_RATIO] < MINIMUM_SURFACE_POISSONS_RATIO) {
      errors[SURFACE_POISSONS_RATIO] = minimumValueString(MINIMUM_SURFACE_POISSONS_RATIO);
    }
    if (values[SURFACE_POISSONS_RATIO] > MAXIMUM_SURFACE_POISSONS_RATIO) {
      errors[SURFACE_POISSONS_RATIO] = maximumValueString(MAXIMUM_SURFACE_POISSONS_RATIO);
    }

    if (pavementStructureType === HDG) {

      if (values[SURFACE_LAYER_MODULUS_ELASTICITY] < HDG_MINIMUM_SURFACE_LAYER_MODULUS_ELASTICITY) {
        errors[SURFACE_LAYER_MODULUS_ELASTICITY] = minimumValueString(DISPLAY_HDG_MINIMUM_SURFACE_LAYER_MODULUS_ELASTICITY);
      }
      if (values[SURFACE_LAYER_MODULUS_ELASTICITY] > HDG_MAXIMUM_SURFACE_LAYER_MODULUS_ELASTICITY) {
        errors[SURFACE_LAYER_MODULUS_ELASTICITY] = maximumValueString(DISPLAY_HDG_MAXIMUM_SURFACE_LAYER_MODULUS_ELASTICITY);
      }

        if (values[SURFACE_LAYER_THICKNESS] < MINIMUM_HDG_SURFACE_THICKNESS) {
            errors[SURFACE_LAYER_THICKNESS] = minimumValueString(MINIMUM_HDG_SURFACE_THICKNESS);
        }
        if (values[SURFACE_LAYER_THICKNESS] > MAXIMUM_HDG_SURFACE_THICKNESS) {
            errors[SURFACE_LAYER_THICKNESS] = maximumValueString(MAXIMUM_HDG_SURFACE_THICKNESS);
        }


    } else {

      if (values[SURFACE_LAYER_MODULUS_ELASTICITY] < BST_AND_OTHER_MINIMUM_SURFACE_LAYER_MODULUS_ELASTICITY) {
        errors[SURFACE_LAYER_MODULUS_ELASTICITY] = minimumValueString(DISPLAY_BST_AND_OTHER_MINIMUM_SURFACE_LAYER_MODULUS_ELASTICITY);
      }
      if (values[SURFACE_LAYER_MODULUS_ELASTICITY] > BST_AND_OTHER_MAXIMUM_SURFACE_LAYER_MODULUS_ELASTICITY) {
        errors[SURFACE_LAYER_MODULUS_ELASTICITY] = maximumValueString(DISPLAY_BST_AND_OTHER_MAXIMUM_SURFACE_LAYER_MODULUS_ELASTICITY);
        }

        if (values[SURFACE_LAYER_THICKNESS] < MINIMUM_BST_AND_OTHER_SURFACE_THICKNESS) {
            errors[SURFACE_LAYER_THICKNESS] = minimumValueString(MINIMUM_BST_AND_OTHER_SURFACE_THICKNESS);
        }
        if (values[SURFACE_LAYER_THICKNESS] > MAXIMUM_BST_AND_OTHER_SURFACE_THICKNESS) {
            errors[SURFACE_LAYER_THICKNESS] = maximumBSTThicknessValueString(MAXIMUM_BST_AND_OTHER_SURFACE_THICKNESS);
        }

    }
    
  } else if (unitType === METRIC) {
    if (values[METRIC_SURFACE_POISSONS_RATIO] < METRIC_MINIMUM_SURFACE_POISSONS_RATIO) {
      errors[METRIC_SURFACE_POISSONS_RATIO] = minimumValueString(METRIC_MINIMUM_SURFACE_POISSONS_RATIO);
    }
    if (values[METRIC_SURFACE_POISSONS_RATIO] > METRIC_MAXIMUM_SURFACE_POISSONS_RATIO) {
      errors[METRIC_SURFACE_POISSONS_RATIO] = maximumValueString(METRIC_MAXIMUM_SURFACE_POISSONS_RATIO);
    }

    if (pavementStructureType === HDG) {

      if (values[METRIC_SURFACE_LAYER_MODULUS_ELASTICITY] < METRIC_HDG_MINIMUM_SURFACE_LAYER_MODULUS_ELASTICITY) {
        errors[METRIC_SURFACE_LAYER_MODULUS_ELASTICITY] = minimumValueString(METRIC_DISPLAY_HDG_MINIMUM_SURFACE_LAYER_MODULUS_ELASTICITY);
      }
      if (values[METRIC_SURFACE_LAYER_MODULUS_ELASTICITY] > METRIC_HDG_MAXIMUM_SURFACE_LAYER_MODULUS_ELASTICITY) {
        errors[METRIC_SURFACE_LAYER_MODULUS_ELASTICITY] = maximumValueString(METRIC_DISPLAY_HDG_MAXIMUM_SURFACE_LAYER_MODULUS_ELASTICITY);
      }

    } else {

      if (values[METRIC_SURFACE_LAYER_MODULUS_ELASTICITY] < METRIC_BST_AND_OTHER_MINIMUM_SURFACE_LAYER_MODULUS_ELASTICITY) {
        errors[METRIC_SURFACE_LAYER_MODULUS_ELASTICITY] = minimumValueString(METRIC_DISPLAY_BST_AND_OTHER_MINIMUM_SURFACE_LAYER_MODULUS_ELASTICITY);
      }
      if (values[METRIC_SURFACE_LAYER_MODULUS_ELASTICITY] > METRIC_BST_AND_OTHER_MAXIMUM_SURFACE_LAYER_MODULUS_ELASTICITY) {
        errors[METRIC_SURFACE_LAYER_MODULUS_ELASTICITY] = maximumValueString(METRIC_DISPLAY_BST_AND_OTHER_MAXIMUM_SURFACE_LAYER_MODULUS_ELASTICITY);
      }
    }
    
  } 

  return errors;
}

export const warn = (values, props) => {
  const warnings = {};
  const { pavementStructureType, unitType } = props

  if (unitType === US) {
    if (pavementStructureType === HDG) {
      if (values[SURFACE_LAYER_MODULUS_ELASTICITY] < HDG_LOW_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY) {
        warnings[SURFACE_LAYER_MODULUS_ELASTICITY] = minimumValueString(DISPLAY_HDG_LOW_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY);
      }
      if (values[SURFACE_LAYER_MODULUS_ELASTICITY] > HDG_HIGH_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY) {
        warnings[SURFACE_LAYER_MODULUS_ELASTICITY] = maximumValueString(DISPLAY_HDG_HIGH_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY);
      }
    } else {
      if (values[SURFACE_LAYER_MODULUS_ELASTICITY] < BST_AND_OTHER_LOW_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY) {
        warnings[SURFACE_LAYER_MODULUS_ELASTICITY] = minimumValueString(DISPLAY_BST_AND_OTHER_LOW_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY);
      }
      if (values[SURFACE_LAYER_MODULUS_ELASTICITY] > BST_AND_OTHER_HIGH_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY) {
        warnings[SURFACE_LAYER_MODULUS_ELASTICITY] = maximumValueString(DISPLAY_BST_AND_OTHER_HIGH_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY);
      }
    }
  } else if (unitType === METRIC) {
    if (pavementStructureType === HDG) {
      if (values[SURFACE_LAYER_MODULUS_ELASTICITY] < METRIC_HDG_LOW_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY) {
        warnings[SURFACE_LAYER_MODULUS_ELASTICITY] = minimumValueString(METRIC_DISPLAY_HDG_LOW_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY);
      }
      if (values[SURFACE_LAYER_MODULUS_ELASTICITY] > METRIC_HDG_HIGH_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY) {
        warnings[SURFACE_LAYER_MODULUS_ELASTICITY] = maximumValueString(METRIC_DISPLAY_HDG_HIGH_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY);
      }
    } else {
      if (values[SURFACE_LAYER_MODULUS_ELASTICITY] < METRIC_BST_AND_OTHER_LOW_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY) {
        warnings[SURFACE_LAYER_MODULUS_ELASTICITY] = minimumValueString(METRIC_DISPLAY_BST_AND_OTHER_LOW_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY);
      }
      if (values[SURFACE_LAYER_MODULUS_ELASTICITY] > METRIC_BST_AND_OTHER_HIGH_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY) {
        warnings[SURFACE_LAYER_MODULUS_ELASTICITY] = maximumValueString(METRIC_DISPLAY_BST_AND_OTHER_HIGH_WARNING_SURFACE_LAYER_MODULUS_ELASTICITY);
      }
    }
  }

    return warnings;
}
