import { each, isUndefined } from 'underscore';
import { minimumValueString, maximumValueString } from 'Validation/validationHelper';
import {
  COMPRESSIVE_STREGTH,
  TWENTYEIGHTDAY_FLEX_STRENGTH,
  SPLIT_TESILE_STRENGTH, 
  CONCRETE_MODULUS_OF_ELASTICITY,
  DRAINAGE_COEFFICIENT,
  INIITAL_SERVICABILITY,
  TERMINAL_SERVICABILITY,
  LOAD_TRANSFER_COEFFICIENT,
  EDGE_SUPPORT,
  CONCRETE,
  STREET,
  US, 
  METRIC
} from  'Constants';

// US units
const        MAXIMUM_TWENTYEIGHTDAY_FLEX_STRENGTH = 1200;
const METRIC_MAXIMUM_TWENTYEIGHTDAY_FLEX_STRENGTH = 8.27;

const        DISPLAY_MAXIMUM_TWENTYEIGHTDAY_FLEX_STRENGTH = '1,200';
const METRIC_DISPLAY_MAXIMUM_TWENTYEIGHTDAY_FLEX_STRENGTH = '8.27';

const        MINIMUM_TWENTYEIGHTDAY_FLEX_STRENGTH = 100;
const METRIC_MINIMUM_TWENTYEIGHTDAY_FLEX_STRENGTH = 0.69;

const        HIGH_WARNING_TWENTYEIGHTDAY_FLEX_STRENGTH = 900;
const METRIC_HIGH_WARNING_TWENTYEIGHTDAY_FLEX_STRENGTH = 4.83;

const        DISPLAY_HIGH_WARNING_TWENTYEIGHTDAY_FLEX_STRENGTH = 'Number is a little high. Typical Range is 500-900 psi';
const METRIC_DISPLAY_HIGH_WARNING_TWENTYEIGHTDAY_FLEX_STRENGTH = 'Number is a little high. Typical Range is 3.45-4.83 Mpa';

const        LOW_WARNING_TWENTYEIGHTDAY_FLEX_STRENGTH= 500;
const METRIC_LOW_WARNING_TWENTYEIGHTDAY_FLEX_STRENGTH= 3.45;

const        DISPLAY_LOW_WARNING_TWENTYEIGHTDAY_FLEX_STRENGTH= 'Number is a little low. Typical Range is 500-900 psi';
const METRIC_DISPLAY_LOW_WARNING_TWENTYEIGHTDAY_FLEX_STRENGTH= 'Number is a little low. Typical Range is 3.45-4.83 Mpa';

const        MAXIMUM_CONCRETE_MODULUS_OF_ELASTICITY  = 10000000;
const METRIC_MAXIMUM_CONCRETE_MODULUS_OF_ELASTICITY  = 68950;

const        DISPLAY_MAXIMUM_CONCRETE_MODULUS_OF_ELASTICITY  = '10,000,000';
const METRIC_DISPLAY_MAXIMUM_CONCRETE_MODULUS_OF_ELASTICITY  = '68950';

const        MINIMUM_CONCRETE_MODULUS_OF_ELASTICITY = 500000;
const METRIC_MINIMUM_CONCRETE_MODULUS_OF_ELASTICITY = 3447.50;

const        DISPLAY_MINIMUM_CONCRETE_MODULUS_OF_ELASTICITY = '5,00,000';
const METRIC_DISPLAY_MINIMUM_CONCRETE_MODULUS_OF_ELASTICITY = '3,447.5';

const        HIGH_WARNING_CONCRETE_MODULUS_OF_ELASTICITY  = 5000000;
const METRIC_HIGH_WARNING_CONCRETE_MODULUS_OF_ELASTICITY  = 34475;

const        DISPLAY_HIGH_WARNING_CONCRETE_MODULUS_OF_ELASTICITY  = 'Number is a little high. Typical Range is 3,000,000 - 5,000,000 psi';
const METRIC_DISPLAY_HIGH_WARNING_CONCRETE_MODULUS_OF_ELASTICITY  = 'Number is a little high. Typical Range is 20,685 - 34,475 Mpa';

const        LOW_WARNING_CONCRETE_MODULUS_OF_ELASTICITY = 3000000;
const METRIC_LOW_WARNING_CONCRETE_MODULUS_OF_ELASTICITY = 20685;

const        DISPLAY_LOW_WARNING_CONCRETE_MODULUS_OF_ELASTICITY = 'Number is a little low. Typical Range is 3,000,000 - 5,000,000 psi';
const METRIC_DISPLAY_LOW_WARNING_CONCRETE_MODULUS_OF_ELASTICITY = 'Number is a little low. Typical Range is 20,685 - 34,475 Mpa';

const        MAXIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_YES = 2.6;
const METRIC_MAXIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_YES = 2.6;

const        MINIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_YES = 2.5;
const METRIC_MINIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_YES = 2.5;

const        MAXIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_NO = 3.1;
const METRIC_MAXIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_NO = 3.1;

const        MINIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_NO = 2.9;
const METRIC_MINIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_NO = 2.9;

const        MAXIMUM_DRAINAGE_COEFFICIENT  = 1.25;
const METRIC_MAXIMUM_DRAINAGE_COEFFICIENT  = 1.25;

const        MINIMUM_DRAINAGE_COEFFICIENT = 0.70;
const METRIC_MINIMUM_DRAINAGE_COEFFICIENT = 0.70;

const        MAXIMUM_INIITAL_SERVICABILITY  = 5;
const METRIC_MAXIMUM_INIITAL_SERVICABILITY  = 5;

const        MINIMUM_INIITAL_SERVICABILITY = 3;
const METRIC_MINIMUM_INIITAL_SERVICABILITY = 3;

const        MAXIMUM_TERMINAL_SERVICABILITY  = 4;
const METRIC_MAXIMUM_TERMINAL_SERVICABILITY  = 4;

const        MINIMUM_TERMINAL_SERVICABILITY = 1;
const METRIC_MINIMUM_TERMINAL_SERVICABILITY = 1;

const enterValueString = 'Please enter a value';

export const validate = (values, props) => {
  const errors = {};
  const { projectType, constructionType } = props.params;
  const unitType = props.unitType;

  const inputs = [COMPRESSIVE_STREGTH, TWENTYEIGHTDAY_FLEX_STRENGTH, SPLIT_TESILE_STRENGTH, CONCRETE_MODULUS_OF_ELASTICITY];

  each(inputs, function(input) {
    if (isUndefined(values[input])) {
      errors[input] = enterValueString;
    }
  })

  if (unitType === US) {
    if (projectType === STREET && constructionType === CONCRETE) {
       if (values[EDGE_SUPPORT] === 'Yes') {
          if (values[LOAD_TRANSFER_COEFFICIENT] < MINIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_YES) {
           errors[LOAD_TRANSFER_COEFFICIENT] = minimumValueString(MINIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_YES);
          }
          if (values[LOAD_TRANSFER_COEFFICIENT] > MAXIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_YES) {
            errors[LOAD_TRANSFER_COEFFICIENT] = maximumValueString(MAXIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_YES);
          }
       } else if (values[EDGE_SUPPORT] === 'No') {
          if (values[LOAD_TRANSFER_COEFFICIENT] < MINIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_NO) {
           errors[LOAD_TRANSFER_COEFFICIENT] = minimumValueString(MINIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_NO);
          }
          if (values[LOAD_TRANSFER_COEFFICIENT] > MAXIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_NO) {
            errors[LOAD_TRANSFER_COEFFICIENT] = maximumValueString(MAXIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_NO);
          }
       } 
    }

    if (values[TWENTYEIGHTDAY_FLEX_STRENGTH] < MINIMUM_TWENTYEIGHTDAY_FLEX_STRENGTH) {
      errors[TWENTYEIGHTDAY_FLEX_STRENGTH] = minimumValueString(MINIMUM_TWENTYEIGHTDAY_FLEX_STRENGTH);
    }
    if (values[TWENTYEIGHTDAY_FLEX_STRENGTH] > MAXIMUM_TWENTYEIGHTDAY_FLEX_STRENGTH) {
      errors[TWENTYEIGHTDAY_FLEX_STRENGTH] = maximumValueString(DISPLAY_MAXIMUM_TWENTYEIGHTDAY_FLEX_STRENGTH);
    }

    if (values[CONCRETE_MODULUS_OF_ELASTICITY] < MINIMUM_CONCRETE_MODULUS_OF_ELASTICITY) {
      errors[CONCRETE_MODULUS_OF_ELASTICITY] = minimumValueString(DISPLAY_MINIMUM_CONCRETE_MODULUS_OF_ELASTICITY);
    }
    if (values[CONCRETE_MODULUS_OF_ELASTICITY] > MAXIMUM_CONCRETE_MODULUS_OF_ELASTICITY) {
      errors[CONCRETE_MODULUS_OF_ELASTICITY] = maximumValueString(DISPLAY_MAXIMUM_CONCRETE_MODULUS_OF_ELASTICITY);
    }

    if (values[DRAINAGE_COEFFICIENT] < MINIMUM_DRAINAGE_COEFFICIENT) {
      errors[DRAINAGE_COEFFICIENT] = minimumValueString(MINIMUM_DRAINAGE_COEFFICIENT);
    }
    if (values[DRAINAGE_COEFFICIENT] > MAXIMUM_DRAINAGE_COEFFICIENT) {
        errors[DRAINAGE_COEFFICIENT] = maximumValueString(MAXIMUM_DRAINAGE_COEFFICIENT);
    }

     if (values[INIITAL_SERVICABILITY] < MINIMUM_INIITAL_SERVICABILITY) {
      errors[INIITAL_SERVICABILITY] = minimumValueString(MINIMUM_INIITAL_SERVICABILITY);
    }
    if (values[INIITAL_SERVICABILITY] > MAXIMUM_INIITAL_SERVICABILITY) {
      errors[INIITAL_SERVICABILITY] = maximumValueString(MAXIMUM_INIITAL_SERVICABILITY);
    }

     if (values[TERMINAL_SERVICABILITY] < MINIMUM_TERMINAL_SERVICABILITY) {
      errors[TERMINAL_SERVICABILITY] = minimumValueString(MINIMUM_TERMINAL_SERVICABILITY);
    }
    if (values[TERMINAL_SERVICABILITY] > MAXIMUM_TERMINAL_SERVICABILITY) {
      errors[TERMINAL_SERVICABILITY] = maximumValueString(MAXIMUM_TERMINAL_SERVICABILITY);
    }
  } else if (unitType === METRIC) {
    
    if (projectType === STREET && constructionType === CONCRETE) {
       if (values[EDGE_SUPPORT] === 'Yes') {
          if (values[LOAD_TRANSFER_COEFFICIENT] < METRIC_MINIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_YES) {
           errors[LOAD_TRANSFER_COEFFICIENT] = minimumValueString(METRIC_MINIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_YES);
          }
          if (values[LOAD_TRANSFER_COEFFICIENT] > METRIC_MAXIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_YES) {
            errors[LOAD_TRANSFER_COEFFICIENT] = maximumValueString(METRIC_MAXIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_YES);
          }
       } else if (values[EDGE_SUPPORT] === 'No') {
          if (values[LOAD_TRANSFER_COEFFICIENT] < METRIC_MINIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_NO) {
           errors[LOAD_TRANSFER_COEFFICIENT] = minimumValueString(METRIC_MINIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_NO);
          }
          if (values[LOAD_TRANSFER_COEFFICIENT] > METRIC_MAXIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_NO) {
            errors[LOAD_TRANSFER_COEFFICIENT] = maximumValueString(METRIC_MAXIMUM_LOAD_TRANSFER_COEFFICIENT_WITH_EDGE_SUPPORT_NO);
          }
       } 
    }

    if (values[TWENTYEIGHTDAY_FLEX_STRENGTH] < METRIC_MINIMUM_TWENTYEIGHTDAY_FLEX_STRENGTH) {
      errors[TWENTYEIGHTDAY_FLEX_STRENGTH] = minimumValueString(METRIC_MINIMUM_TWENTYEIGHTDAY_FLEX_STRENGTH);
    }
    if (values[TWENTYEIGHTDAY_FLEX_STRENGTH] > METRIC_MAXIMUM_TWENTYEIGHTDAY_FLEX_STRENGTH) {
      errors[TWENTYEIGHTDAY_FLEX_STRENGTH] = maximumValueString(METRIC_DISPLAY_MAXIMUM_TWENTYEIGHTDAY_FLEX_STRENGTH);
    }

    if (values[CONCRETE_MODULUS_OF_ELASTICITY] < METRIC_MINIMUM_CONCRETE_MODULUS_OF_ELASTICITY) {
      errors[CONCRETE_MODULUS_OF_ELASTICITY] = minimumValueString(METRIC_DISPLAY_MINIMUM_CONCRETE_MODULUS_OF_ELASTICITY);
    }
    if (values[CONCRETE_MODULUS_OF_ELASTICITY] > METRIC_MAXIMUM_CONCRETE_MODULUS_OF_ELASTICITY) {
      errors[CONCRETE_MODULUS_OF_ELASTICITY] = maximumValueString(METRIC_DISPLAY_MAXIMUM_CONCRETE_MODULUS_OF_ELASTICITY);
    }

    if (values[DRAINAGE_COEFFICIENT] < METRIC_MINIMUM_DRAINAGE_COEFFICIENT) {
      errors[DRAINAGE_COEFFICIENT] = minimumValueString(METRIC_MINIMUM_DRAINAGE_COEFFICIENT);
    }
    if (values[DRAINAGE_COEFFICIENT] > METRIC_MAXIMUM_DRAINAGE_COEFFICIENT) {
      errors[INIITAL_SERVICABILITY] = maximumValueString(METRIC_MAXIMUM_DRAINAGE_COEFFICIENT);
    }

     if (values[INIITAL_SERVICABILITY] < METRIC_MINIMUM_INIITAL_SERVICABILITY) {
      errors[INIITAL_SERVICABILITY] = minimumValueString(METRIC_MINIMUM_INIITAL_SERVICABILITY);
    }
    if (values[INIITAL_SERVICABILITY] > METRIC_MAXIMUM_INIITAL_SERVICABILITY) {
      errors[INIITAL_SERVICABILITY] = maximumValueString(METRIC_MAXIMUM_INIITAL_SERVICABILITY);
    }

     if (values[TERMINAL_SERVICABILITY] < METRIC_MINIMUM_TERMINAL_SERVICABILITY) {
      errors[TERMINAL_SERVICABILITY] = minimumValueString(METRIC_MINIMUM_TERMINAL_SERVICABILITY);
    }
    if (values[TERMINAL_SERVICABILITY] > METRIC_MAXIMUM_TERMINAL_SERVICABILITY) {
      errors[TERMINAL_SERVICABILITY] = maximumValueString(METRIC_MAXIMUM_TERMINAL_SERVICABILITY);
    }
  }

  return errors;
}

export const warn = (values, props) => {
  const warnings = {};
  const unitType = props.unitType;

  if(unitType === US) {
    if (values[TWENTYEIGHTDAY_FLEX_STRENGTH] < LOW_WARNING_TWENTYEIGHTDAY_FLEX_STRENGTH) {
      warnings[TWENTYEIGHTDAY_FLEX_STRENGTH] = DISPLAY_LOW_WARNING_TWENTYEIGHTDAY_FLEX_STRENGTH;
    }

    if (values[TWENTYEIGHTDAY_FLEX_STRENGTH] > HIGH_WARNING_TWENTYEIGHTDAY_FLEX_STRENGTH) {
      warnings[TWENTYEIGHTDAY_FLEX_STRENGTH] = DISPLAY_HIGH_WARNING_TWENTYEIGHTDAY_FLEX_STRENGTH
    }

    if (values[CONCRETE_MODULUS_OF_ELASTICITY] < LOW_WARNING_CONCRETE_MODULUS_OF_ELASTICITY) {
      warnings[CONCRETE_MODULUS_OF_ELASTICITY] = DISPLAY_LOW_WARNING_CONCRETE_MODULUS_OF_ELASTICITY
    }

    if (values[CONCRETE_MODULUS_OF_ELASTICITY] > HIGH_WARNING_CONCRETE_MODULUS_OF_ELASTICITY) {
      warnings[CONCRETE_MODULUS_OF_ELASTICITY] = DISPLAY_HIGH_WARNING_CONCRETE_MODULUS_OF_ELASTICITY
    }
    
  } else if (unitType === METRIC) {
     // NEED to eneter metric limits

     if (values[TWENTYEIGHTDAY_FLEX_STRENGTH] < METRIC_LOW_WARNING_TWENTYEIGHTDAY_FLEX_STRENGTH) {
      warnings[TWENTYEIGHTDAY_FLEX_STRENGTH] = METRIC_DISPLAY_LOW_WARNING_TWENTYEIGHTDAY_FLEX_STRENGTH
    }

    if (values[TWENTYEIGHTDAY_FLEX_STRENGTH] > METRIC_HIGH_WARNING_TWENTYEIGHTDAY_FLEX_STRENGTH) {
      warnings[TWENTYEIGHTDAY_FLEX_STRENGTH] = METRIC_DISPLAY_HIGH_WARNING_TWENTYEIGHTDAY_FLEX_STRENGTH
    }

    if (values[CONCRETE_MODULUS_OF_ELASTICITY] < METRIC_LOW_WARNING_CONCRETE_MODULUS_OF_ELASTICITY) {
      warnings[CONCRETE_MODULUS_OF_ELASTICITY] = METRIC_DISPLAY_LOW_WARNING_CONCRETE_MODULUS_OF_ELASTICITY
    }

    if (values[CONCRETE_MODULUS_OF_ELASTICITY] > METRIC_HIGH_WARNING_CONCRETE_MODULUS_OF_ELASTICITY) {
      warnings[CONCRETE_MODULUS_OF_ELASTICITY] = METRIC_DISPLAY_HIGH_WARNING_CONCRETE_MODULUS_OF_ELASTICITY
    }
  }


  return warnings;
}
